<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.houx.Mapper.EmployeeMapper">


    <resultMap id="EmployeeMap" type="com.houx.pojo.Employee">
        <id column="id" property="id"/>
        <result column="real_name" property="realName"/>
        <result column="sex" property="sex" typeHandler="com.houx.typeHandler.SexTypeHandler"/>
        <result column="birthday" property="birthday"/>
        <result column="mobile" property="mobile"/>
        <result column="email" property="email"/>
        <result column="position" property="position"/>
        <result column="note" property="note"/>


        <!--association元素  对工牌进行一对一级联-->
        <!--collection元素  一对多级联
            其select元素指向SQL，将通过column指定的SQL字段作为参数进行传递，
            然后将结果返回给雇员POJO的属性employeeTaskList
        -->
        <!--discriminator元素 鉴别器 他的属性column代表使用哪个字段进行鉴别，
            这里的是sex，而他的子元素case，则用于区分，类似于Java的Switch...case...语句
            而resultMap属性表示采用哪个ResultMap去映射，比如sex = 1，则使用maleHealthFormMapper进行映射

        -->
        <association property="workCard" column="id" select="com.houx.Mapper.WorkCardMapper.getWorkCardByEmpId"/>
        <collection property="employeeTaskList" column="id" select="com.houx.Mapper.WorkCardMapper.getWorkCardByEmpId"/>
        <discriminator javaType="long" column="sex">
            <case value="1" resultMap="maleHealthFormMapper"/>
            <case value="2" resultMap="femaleHealthFormMapper"/>
        </discriminator>
    </resultMap>

    <select id="getEmployee" parameterType="long" resultMap="EmployeeMap">
        select id, real_name as realName, sex, birthday, mobile, email, position, note from t_employee
        where id = #{id}
    </select>

    <!--<select id="getEmployee2" parameterType="long" resultMap="EmployeeMap">-->
        <!--select emp.id, emp.real_name, emp.sex, emp.birthday, emp.mobile,-->
          <!--emp.email, emp,position, emp.note,-->
          <!--et.id et_id, et.task et_task_id, et.task_name et_task_name, et.note et_note,-->
          <!--if(emp.sex = 1, mhf.id, fhf.id) as h_id,-->
          <!--if(emp.sex = 1,mhf.heart, fhf.heart) as h_heart,-->
          <!--if(emp.sex = 1,mhf.liver, fhf.liver) as h_liver,-->
          <!--if(emp.sex = 1,mhf.spleen, fhf.spleen) as h_spleen,-->
          <!--if(emp.sex = 1,mhf.lung, fhf.lung) as h_lung,-->
          <!--if(emp.sex = 1,mhf.kidney, fhf.kidney) as h_kidney,-->
          <!--if(emp.sex = 1,mhf.note, fhf.note) as h_note,-->
          <!--mhf.prostate as h_prostate, fhf.uterus as h_uterus,-->
          <!--wc.id wc_id, wc.real_name wc_real_name, wc.department wc_department,-->
          <!--wc.mobile wc_mobile, wc.position wc_position, wc.note wc_note,-->
          <!--t.id t_id, t.title t_title, t.context t_context, t.note t_note-->
          <!--from t_employee emp-->
          <!--left join t_employee_tak et on emp.id = et.emp_id-->
          <!--left join t_female_health_form fhf on emp.id = fhf.emp_id-->
          <!--left join t_male_health_form mhf on emp.id = mhf.emp_id-->
          <!--left join t_work_card wc on emp.id = wc.emp_id-->
          <!--left join t_task t on et.task_id = t.id-->
          <!--where emp.id = #{id}-->

    <!--</select>-->


</mapper>