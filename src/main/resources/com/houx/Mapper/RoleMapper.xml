<!--<?xml version="1.0" encoding="UTF-8" ?>-->
<!--<!DOCTYPE mapper-->
        <!--PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"-->
        <!--"http://mybatis.org/dtd/mybatis-3-mapper.dtd">-->


<!--<mapper namespace="com.houx.Mapper.RoleMapper">-->

    <!--&lt;!&ndash;使用resultMap作为映射结果集&ndash;&gt;-->

    <!--<resultMap id="roleMap" type="role">-->
        <!--<id property="id" column="id"/>-->
        <!--<result property="roleName" column="role_name"/>-->
        <!--<result property="note" column="note"/>-->
    <!--</resultMap>-->

    <!--&lt;!&ndash;sql元素&ndash;&gt;-->
    <!--<sql id="roleCols">-->
        <!--id,role_name,note-->
    <!--</sql>-->

    <!--<sql id="roleCols">-->
        <!--${alias}.id ,${alias}.role_name,${alias}.note-->
    <!--</sql>-->


    <!--<insert id="insertRole" parameterType="role">-->
        <!--<selectKey keyProperty="id" resultType="int"-->
                   <!--order="BEFORE" statementType="PREPARED">-->
            <!--select if (max(id)) = null ,1,max((id)+3) from t_role-->
        <!--</selectKey>-->
        <!--insert into t_role-->
        <!--<include refid="roleCols"/>-->
        <!--values (#{roleName},#{note})-->
    <!--</insert>-->

    <!--<delete id="deleteRole" parameterType="long">-->
        <!--delete from t_role where id = #{id}-->
    <!--</delete>-->

    <!--<update id="updateRole" parameterType="role">-->
        <!--update t_role set role_name as roleName = #{roleName},note=#{note} from t_role where id = #{id}-->
    <!--</update>-->


    <!--<select id="getRole" parameterType="int" resultMap="roleMap">  &lt;!&ndash;别名&ndash;&gt;-->
        <!--select-->
        <!--<include refid="roleCols">-->
            <!--<property name="alias" value="r"/>-->
        <!--</include>-->
        <!--from t_role where id = #{id}-->
    <!--</select>-->


    <!--&lt;!&ndash;<select id="findRoles" parameterType="string" resultMap="roleMap">&ndash;&gt;-->
    <!--&lt;!&ndash;select id,role_name as roleName,note from t_role where role_name like concat ('%',#{roleName},'%')&ndash;&gt;-->
    <!--&lt;!&ndash;</select>&ndash;&gt;-->

    <!--&lt;!&ndash;使用if元素&ndash;&gt;-->
    <!--<select id="findRoles" parameterType="string" resultMap="roleMap">-->
        <!--select id, role_name as roleName, note from t_role where 1 = 1-->
        <!--<if test="roleName != null and roleName != '">-->
            <!--and role_name like concat('%', #{roleName}, '%')-->
        <!--</if>-->
    <!--</select>-->

    <!--&lt;!&ndash;使用choose、when、otherwise&ndash;&gt;-->
    <!--<select id="findRoles" parameterType="string" resultMap="roleMap">-->
        <!--select-->
        <!--<include refid="roleCols"/>-->
        <!--from t_role where 1 = 1-->
        <!--<choose>-->
            <!--<when test="id != null and id != ''">-->
                <!--and id = #{id}-->
            <!--</when>-->

            <!--<when test="roleName != null and roleName != ''">-->
                <!--and role_name like concat('%',${roleName},'%')-->
            <!--</when>-->

            <!--<otherwise>-->
                <!--and note is not null-->
            <!--</otherwise>-->
        <!--</choose>-->
    <!--</select>-->

    <!--&lt;!&ndash;使用where元素-->
        <!--当if条件中正确时，where元素会自动去掉开头的and或者or-->
    <!--&ndash;&gt;-->
    <!--<select id="findRoles" parameterType="role" resultMap="roleMap">-->
        <!--select-->
        <!--<include refid="roleCols"/>-->
        <!--from t_role-->
        <!--<where>-->
            <!--<if test="roleName != null and roleName != ''">-->
                <!--and role_name like concat('%',#{roleName},'%')-->
            <!--</if>-->
            <!--<if test="note != null and note != ''">-->
                <!--and note like concat('%',#{note},'%')-->
            <!--</if>-->
        <!--</where>-->
    <!--</select>-->


    <!--&lt;!&ndash;使用trim元素,意味着去掉一些特殊的字符串，-->
        <!--prefix:代表的是语句的前缀-->
        <!--prefixOverrides:代表的是需要去掉哪种字符串-->
        <!--suffix:-->
        <!--suffixOverrides-->
    <!--&ndash;&gt;-->
    <!--<select id="findRoles" parameterType="role" resultMap="roleMap">-->
        <!--select-->
        <!--<include refid="roleCols"/>-->
        <!--from t_role-->
        <!--<trim prefix="where" prefixOverrides="and | or">-->
            <!--<if test="roleName != null and roleName != ''">-->
                <!--and role_name like concat('%',#{roleName},'%')-->
            <!--</if>-->
        <!--</trim>-->
    <!--</select>-->

    <!--&lt;!&ndash;使用set元素,-->
        <!--set遇到" , "会把对应的","去掉-->
    <!--&ndash;&gt;-->
    <!--<update id="findRoles" parameterType="role">-->
        <!--update t_role-->
        <!--<set>-->
            <!--<if test="roleName != null and roleName != ''">-->
                <!--role_name = #{roleName},-->
            <!--</if>-->

            <!--<if test="note != null and note != ''">-->
                <!--note = #{note},-->
            <!--</if>-->
        <!--</set>-->
        <!--where id = #{id}-->
    <!--</update>-->

    <!--<update id="findRoles" parameterType="role">-->
        <!--update t_role-->
        <!--<trim prefix="set" suffixOverrides=",">-->
            <!--<if test="roleName != null and roleName != ''">-->
                <!--role_name = #{roleName}-->
            <!--</if>-->
        <!--</trim>-->
    <!--</update>-->


    <!--&lt;!&ndash;<select id="countUserByFirstName" parameterType="string" resultType="integer">&ndash;&gt;-->
    <!--&lt;!&ndash;select count(*) total from t_user where user_name like concat(#{firstName},'%')&ndash;&gt;-->
    <!--&lt;!&ndash;</select>&ndash;&gt;-->

    <!--<select id="findRolesByMap" parameterType="map" resultMap="roleMap">-->
        <!--select id,role_name roleName,note from t_role-->
        <!--where role_name like concat('%',#{roleName},'%')-->
        <!--and note like concat('%',#{note},'%')-->
    <!--</select>-->

    <!--<select id="findRolesByAnnotation" resultMap="roleMap">-->
        <!--select id,role_name roleName,note from t_role-->
        <!--where role_name like concat('%',#{roleName},'%')-->
        <!--and note like concat('%',#{note},'%')-->
    <!--</select>-->

    <!--<select id="findByRowBounds" resultMap="roleMap">-->
        <!--select id,role_name as roleName,note from t_role-->
        <!--where role_name like concat('%',#{roleName},'%')-->
        <!--and note like concat('%',#{note},'%')-->
    <!--</select>-->


    <!--&lt;!&ndash;foreach元素-->
        <!--collection: 配置的roleNoList是传递进来的参数名称,他可以是一个数组、List、Set等集合-->
        <!--item: 配置的是循环中当前的元素-->
        <!--index: 配置的是当前元素在集合的位置的下标-->
        <!--open和close: 配置的是以什么符号将这些集合元素包装起来-->
        <!--separator: 是各个元素的间隔符-->
    <!--&ndash;&gt;-->
    <!--<select id="findRolesBySex" resultMap="roleMap">-->
        <!--select * from t_role where id in-->
        <!--<foreach item="id" index="index" collection="roleNoList" open="(" separator="," close=")">-->
            <!--#{id}-->
        <!--</foreach>-->
    <!--</select>-->


    <!--&lt;!&ndash;用test属性判断字符串-->
        <!--如果把type = 'Y' 传递给sql，就可以发现MyBatis加入了条件where 1 = 1-->
    <!--&ndash;&gt;-->
    <!--<select id="getRoleTest" parameterType="string" resultMap="roleResultMap">-->
        <!--select id,role_name,note from t_role-->
        <!--<if test=" type == 'Y'.toString()">-->
            <!--where 1=1-->
        <!--</if>-->
    <!--</select>-->


    <!--&lt;!&ndash;bind元素&ndash;&gt;-->
    <!--<select id="findRoles" parameterType="string" resultType="com.houx.pojo.RoleBean">-->
        <!--<bind name="pattern" value="'%' + _parameter + '%'"/>-->
        <!--select-->
        <!--id, role_name roleName, create_date createDate, end_date endDate, end_flag endFlag, note-->
        <!--from-->
        <!--t_role-->
        <!--where-->
        <!--role_name like #{pattren}-->
    <!--</select>-->


    <!--&lt;!&ndash;使用bind元素绑定多个参数&ndash;&gt;-->
    <!--<select id="findRoles" parameterType="string" resultType="com.houx.pojo.RoleBean">-->
        <!--<bind name="pattern_roleName" value="'%' + _parameter + '%'"/>-->
        <!--<bind name="pattern_note" value="'%' + roleName + '%'"/>-->
        <!--select-->
          <!--id, role_name roleName, create_date createDate, end_date endDate, end_flag endFlag, note-->
        <!--from-->
          <!--t_role-->
        <!--where-->
          <!--role_name like #{pattren_roleName} and note like #{pattern_note}-->
    <!--</select>-->
<!--</mapper>-->